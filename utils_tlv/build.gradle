apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
sourceCompatibility = 1.6
group = "com.pax.spos"
/*artifactId ='D800_SDK'*/
//name = "utils_tlv"
version = "2.0.1"

/*task proguard(type: proguard.gradle.ProGuardTask,dependsOn:jar) {*/
    /*//printmapping 'proguard.map'*/
        /*overloadaggressively*/
        /*//repackageclasses ''*/
        /*allowaccessmodification*/
        /*injars  "build/libs/${project.name}-${version}.jar"*/
        /*outjars  "build/libs/${project.name}-${version}-proguard.jar"*/
        /*configuration 'proguard.pro'*/
        /*//keep 'public class com.pax.* {public *; }'*/
/*}*/
task proguard(type: proguard.gradle.ProGuardTask,dependsOn:jar) {
        /*dontoptimize*/
        dontwarn
        dontoptimize
        /*optimizationpasses 6  */
        overloadaggressively
        //repackageclasses ''
        allowaccessmodification
        keepattributes '*Annotation*,EnclosingMethod'
        keep 'public class ** {public *; }'
        /*keep 'class **.model.** {public *;}'*/
        /*keepclassmembers 'class **.model.** {public *;}'*/
        injars  "build/libs/${project.name}-${version}.jar"
        outjars  "build/libs/${project.name}-${version}-proguard.jar"
        /*configuration 'proguard.pro'*/
        //keep 'public class com.pax.* {public *; }'
}

task proguardJar(type: Delete,dependsOn: proguard) {
    delete "build/libs/${project.name}-${version}.jar"
        doLast {
            file("build/libs/${project.name}-${version}-proguard.jar").renameTo("build/libs/${project.name}-${version}.jar")
        }
}

/*repositories {*/
/*mavenLocal()*/
/*maven {url "http://www.paxsh.com:10092/nexus/content/groups/public/"}*/
/*mavenCentral()*/
/*}*/
dependencies {
    //compile fileTree(dir: 'libs', include: '*.jar') 
    /*compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'*/
    compile ('com.google.code.gson:gson:2.2.4')
        compile ('com.pax.d800:utils_comm:+')
        /*testCompile group: 'junit', name: 'junit', version: '4.11'*/
        testCompile('junit:junit:4.11')
        /*compile(*/
        /*project(':utils_comm')*/
        /*)*/
}
jar {
    manifest {
        attributes 'Implementation-Title': 'spos tlv', 'Implementation-Version': version
    }
}
/*tasks.withType(compile) { compileTask -> compileTask.dependsOn copyConf }*/


compileJava.dependsOn 'copyConf'
//uploadArchives.dependsOn 'proguard'
//tasks.withType(upload) { uploadTask -> uploadTask.dependsOn proguard }

/*task uploadArchives(type: Upload) {*/
/*dependsOn delOriginJar*/
/*}*/
uploadArchives {
    dependsOn proguardJar
        repositories {
            //if (version.endsWith("-proguard")) { }
            mavenDeployer {
                pom.groupId = "com.pax.d800"
                    /*pom.version = version+"-SNAPSHOT"*/
                    snapshotRepository(url: "http://www.paxsh.com:10092/nexus/content/repositories/snapshots/") {
                        /*pom.version = version*/
                        /*Repository(url: "http://www.paxsh.com:10092/nexus/content/repositories/releases/") {*/
                        authentication(userName: "paxdeploy", password: "paxsh")
                            //uniqueVersion=false
                    }
                    pom.version = version
                        repository(url: "http://www.paxsh.com:10092/nexus/content/repositories/releases/") {
                            authentication(userName: "paxdeploy", password: "paxsh")
                        }  
                    //addFilter('proguardJar') { file -> file.name == "build/libs/${project.name}-${version}-proguard.jar" }
                    }
            }
        }
